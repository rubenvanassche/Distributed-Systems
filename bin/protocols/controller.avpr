{
	"namespace": "protocols.controller",
	"protocol" : "Controller",
	"types": [
		{"name": "Device", "type": "record", "doc" : "Device info for the network", "fields": [
			{"name": "id", "type": "int"},
			{"name": "ipadress", "type": "string"},
			{"name": "port", "type": "int"},
			{"name": "type", "type": "string"}
		]},
		{"name": "Failure", "type": "error", "doc" : "Failure", "fields": [
			{"name": "info", "type": "string"}
		]},
		{"name": "LightStatus", "type": "record", "doc" : "Information about a light and if it's on/off", "fields": [
			{"name": "id", "type": "int"},
			{"name": "state", "type": "boolean"}
		]},
		{"name": "TemperatureHistory", "type": "record", "doc" : "Temperature measured by a sensor", "fields": [
			{"name": "id", "type": "int"},
			{"name": "temperatures", "type": {"type" : "array", "items" : "double"}}
		]},
		{"name": "DeviceStatus", "type": "record", "doc" : "Information about a device and if it's online or not", "fields": [
			{"name": "id", "type": "int"},
			{"name": "online", "type": "boolean"},
			{"name": "type", "type": "string"}
		]},
		{"name": "FridgeStatus", "type": "record", "doc" : "Information about a fridge if it is open and who is using it", "fields": [
			{"name": "id", "type": "int"},
			{"name": "opened", "type": "boolean"},
			{"name": "userid", "type": "int"}
		]}
	],
	"messages" : {
		"register" : {
			"request" : [{"name" : "device", "type": "Device"}],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"updateTemperature" : {
			"request" : [
				{"name" : "id", "type": "int"},
				{"name" : "value", "type": "double"}
			],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"userLeave" : {
			"request" : [
				{"name" : "id", "type": "int"}
			],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"userEnters" : {
			"request" : [
				{"name" : "id", "type": "int"}
			],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"getTemperature" : {
			"request" : [],
			"response" : "double",
			"errors": ["Failure"]
		},
		"getTemperatureHistory" : {
			"request" : [],
			"response" : {"type": "array", "items": "double"},
			"errors": ["Failure"]
		},
		"getDevices" : {
			"request" : [],
			"response" : {"type": "array", "items": "DeviceStatus"},
			"errors": ["Failure"]
		},
		"getLights" : {
			"request" : [],
			"response" : {"type": "array", "items": "LightStatus"},
			"errors": ["Failure"]
		},
		"turnLightOn" : {
			"request" : [
				{"name" : "id", "type": "int"}
			],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"turnLightOff" : {
			"request" : [
				{"name" : "id", "type": "int"}
			],
			"response" : "boolean",
			"errors": ["Failure"]
		},
		"fridgeIsEmpty" : {
			"request" : [
				{"name" : "id", "type": "int"}
			],
			"response" : "null",
			"errors": ["Failure"]
		},
		"openFridge" : {
			"request" : [
				{"name" : "fridgeId", "type": "int"},
				{"name" : "userId", "type": "int"}
			],
			"response" : "Device",
			"errors": ["Failure"]
		},
		"closeFridge" : {
			"request" : [
				{"name" : "fridgeId", "type": "int"},
				{"name" : "userId", "type": "int"}
			],
			"response" : "null",
			"errors": ["Failure"]
		},
		"fridgeStatus" : {
			"request" : [
				{"name" : "fridgeId", "type": "int"}
			],
			"response" : "FridgeStatus",
			"errors": ["Failure"]
		},
		"getFridgeItems" : {
			"request" : [
				{"name" : "fridgeId", "type": "int"}
			],
			"response" : {"type" : "array", "items" : "string"},
			"errors": ["Failure"]
		},
		"ping" : {
			"request" : [],
			"response" : "boolean"
		},
		"restart" : {
			"request" : [
				{"name": "lightStatusses", "type": {"type" : "array", "items" : "LightStatus"}},
				{"name": "openFridges", "type": {"type" : "array", "items" : "FridgeStatus"}},
				{"name": "temperatureHistories", "type": {"type" : "array", "items" : "TemperatureHistory"}},
				{"name": "amountOfMeasurements", "type" : "int"},
				{"name": "time", "type" : "double"}
			],
			"doc" : "Information to restart the controller",
			"response" : "null",
			"errors": ["Failure"]
		},
		"getTime" : {
			"request" : [],
			"doc" : "Get the time from the controller",
			"response" : "double"
		}
	}
}
